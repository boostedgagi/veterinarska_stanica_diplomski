<?php

namespace App\Tests\Unit\Controller;

use App\ApiClient;
use App\Entity\Examination;
use App\Entity\HealthRecord;
use App\Entity\User;
use App\Repository\ExaminationRepository;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityManagerInterface;
use JsonException;
use Nebkam\FluentTest\RequestBuilder;
use PHPUnit\Framework\TestCase;
use Symfony\Bundle\FrameworkBundle\KernelBrowser;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
use Symfony\Component\HttpFoundation\Request;

class ExaminationControllerTest extends WebTestCase
{
    public function setUp(): void
    {
        parent::setUp();
    }

    public function testGetOneExamination():void
    {
        $client = static::createClient();

        $response = RequestBuilder::create($client)
            ->setMethod('GET')
            ->setUri('/examination/%s','5')
            ->getResponse();

        $em = $client->getContainer()->get(EntityManagerInterface::class);
        /**
         * @var $healthRecord HealthRecord
         */
        $examination = $em->getRepository(Examination::class)->find($response->getJsonContent()["id"]);

        self::assertResponseIsSuccessful();
        self::assertResponseStatusCodeSame(200);
        self::assertNotEmpty($examination);
    }

    /**
     * @return void
     */
    public function testCreate(): void
    {
        $client = static::createClient();
        $em = $client->getContainer()->get(EntityManagerInterface::class);

        /**
         * @var $admin User
         */
        $admin = $em->getRepository(User::class)->findByRole("ROLE_ADMIN");

        $client->loginUser($admin);
        $response = RequestBuilder::create($client)
            ->setMethod('POST')
            ->setUri('/examination')
            ->setContent('
                {
                      "name": "Test examination",
                      "duration": 45,
                      "price":100
                }
            ')
            ->getResponse();

        /**
         * @var $examination Examination
         */
        $examination = $em->getRepository(Examination::class)->find($response->getJsonContent()["id"]);

        self::assertEquals('Test examination', $examination->getName());
        self::assertEquals(45, $examination->getDuration());
        self::assertEquals(100, $examination->getPrice());
        self::assertResponseIsSuccessful();
    }

    public function testEdit():void
    {
        $client = static::createClient();
        $em = $client->getContainer()->get(EntityManagerInterface::class);

        /**
         * @var $admin User
         */
        $admin = $em->getRepository(User::class)->findByRole("ROLE_ADMIN");

        $client->loginUser($admin);
        $response = RequestBuilder::create($client)
            ->setMethod('PUT')
            ->setUri('/examination/%s',5)
            ->setContent('
                {
                      "name": "Test examination changed",
                      "duration": 60,
                      "price":150
                }
            ')
            ->getResponse();

        /**
         * @var $examination Examination
         */
        $examination = $em->getRepository(Examination::class)->find($response->getJsonContent()["id"]);

        self::assertEquals('Test examination changed', $examination->getName());
        self::assertEquals(60, $examination->getDuration());
        self::assertEquals(150, $examination->getPrice());
        self::assertResponseIsSuccessful();
    }

    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}